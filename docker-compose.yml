version: '3.3'

services:
  db:
    image: postgres:12.0-alpine
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data

  redis:
    image: redis:5
    volumes:
      - redis-data:/data

  server:
    image: kitab-bazar/server
    build:
      context: ./server/
    tty: true
    environment:
      DEBUG: "true"
      # ALLOWED_HOSTS: localhost
      SECRET_KEY: unsecure-123456789-dont-use-in-production
      # From db.environment
      DB_NAME: postgres
      DB_USER: postgres
      DB_PWD: postgres
      DB_HOST: db
      DB_PORT: 5432
    env_file:
      - .env
    command: bash -c "/code/scripts/run_develop.sh"
    volumes:
      - ./server/:/code
      - media:/media
    ports:
      - '8020:8020'
    depends_on:
      - db
      - redis

  react:
    build: .
    command: sh -c 'yarn install --frozen-lockfile && yarn start'
    tty: true
    environment:
      NODE_OPTIONS: --openssl-legacy-provider
      MY_APP: ${MY_APP:-kitab-bazar}
      REACT_APP_ENVIRONMENT: ${REACT_APP_ENVIRONMENT:-development}
      GRAPHQL_CODEGEN_ENDPOINT: ${GRAPHQL_CODEGEN_ENDPOINT:-http://server:8020/graphql/}
      REACT_APP_GRAPHQL_ENDPOINT: ${REACT_APP_GRAPHQL_ENDPOINT:-http://localhost:8020/graphql/}
      REACT_APP_WEB_ENDPOINT: ${REACT_APP_WEB_ENDPOINT:-http://localhost:8020}
    env_file:
      - .env
    volumes:
      - .:/code
    ports:
      - '3080:3080'

volumes:
  media:
  postgres-data:
  redis-data:
